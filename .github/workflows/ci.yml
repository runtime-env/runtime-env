name: CI

on:
  push:
    branches: main
  pull_request:

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install node
        uses: actions/setup-node@v6
        with:
          node-version-file: .nvmrc

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Pack packages
        run: npm run pack

      - uses: actions/upload-artifact@v5
        with:
          name: artifact
          path: |
            ./
            !.git/
            !**/node_modules/

  lint:
    name: Lint

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install node
        uses: actions/setup-node@v6
        with:
          node-version-file: .nvmrc

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npx prettier --check .

  test:
    name: Test

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install node
        uses: actions/setup-node@v6
        with:
          node-version-file: .nvmrc

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Build packages
        run: npm run pack

      - name: Test packages
        run: npm run test

      - name: Test packages (e2e)
        run: |
          npm run pack
          cd examples/test
          npm ci
          npm i ../../packages/cli/runtime-env-cli-test.tgz
          npm run test

      - name: Test production
        run: |
          cp packages/cli/runtime-env-cli-test.tgz examples/production/runtime-env-cli-test.tgz
          cd examples/production
          docker build . -t runtime-env-example
          docker run --publish 3000:80 --env FOO=production runtime-env-example ./runtime-env --help

  release:
    if: github.ref_name == 'main'

    name: Release

    needs:
      - build
      - lint
      - test

    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - cli

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: actions/download-artifact@v6
        with:
          name: artifact

      - name: Install node
        uses: actions/setup-node@v6
        with:
          node-version-file: .nvmrc

      - name: Publish
        uses: JS-DevTools/npm-publish@v4.1.1
        id: publish
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: packages/${{ matrix.package }}/package.json
          tag: latest
          access: public
          dry-run: ${{ github.ref_name != 'main' }}
          strategy: upgrade

      - name: Release
        uses: softprops/action-gh-release@v2
        if: ${{ github.ref_name == 'main' && steps.publish.outputs.type }}
        with:
          tag_name: ${{ matrix.package }}${{ steps.publish.outputs.version }}
          body: "Changelog: https://github.com/runtime-env/runtime-env/blob/${{ matrix.package }}${{ steps.publish.outputs.version }}/packages/${{ matrix.package }}/CHANGELOG.md"
