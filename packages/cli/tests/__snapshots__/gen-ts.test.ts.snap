// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`integration - gen-ts schemaFile - invalid 1`] = `
[
  null,
  "",
  "[@runtime-env/cli]
  schema file not found: no such file, open 'invalid'
",
]
`;

exports[`integration - gen-ts schemaFile 1`] = `
[
  null,
  "// Generated by '@runtime-env/cli'

type Primitive = undefined | null | boolean | string | number;

type DeepReadonly<T> = T extends Primitive
  ? T
  : T extends Array<infer U>
    ? DeepReadonlyArray<U>
    : DeepReadonlyObject<T>;

type DeepReadonlyArray<T> = ReadonlyArray<DeepReadonly<T>>;

type DeepReadonlyObject<T> = {
  readonly [K in keyof T]: DeepReadonly<T[K]>;
};

declare global {
  var runtimeEnv: RuntimeEnv
}

export type RuntimeEnv = DeepReadonly<{
  FOO: string;
  BAR?: {
    BAZ?: string;
  };
}>

",
  "",
]
`;

exports[`integration - gen-ts globalVariableName 1`] = `
[
  null,
  "// Generated by '@runtime-env/cli'

type Primitive = undefined | null | boolean | string | number;

type DeepReadonly<T> = T extends Primitive
  ? T
  : T extends Array<infer U>
    ? DeepReadonlyArray<U>
    : DeepReadonlyObject<T>;

type DeepReadonlyArray<T> = ReadonlyArray<DeepReadonly<T>>;

type DeepReadonlyObject<T> = {
  readonly [K in keyof T]: DeepReadonly<T[K]>;
};

declare global {
  var env: Env
}

export type Env = DeepReadonly<{
  FOO: string;
  BAR?: {
    BAZ?: string;
  };
}>

",
  "",
]
`;

exports[`integration - gen-ts outputFile 1`] = `
[
  null,
  "",
  "",
]
`;

exports[`integration - gen-ts outputFile 2`] = `
"// Generated by '@runtime-env/cli'

type Primitive = undefined | null | boolean | string | number;

type DeepReadonly<T> = T extends Primitive
  ? T
  : T extends Array<infer U>
    ? DeepReadonlyArray<U>
    : DeepReadonlyObject<T>;

type DeepReadonlyArray<T> = ReadonlyArray<DeepReadonly<T>>;

type DeepReadonlyObject<T> = {
  readonly [K in keyof T]: DeepReadonly<T[K]>;
};

declare global {
  var runtimeEnv: RuntimeEnv
}

export type RuntimeEnv = DeepReadonly<{
  FOO: string;
  BAR?: {
    BAZ?: string;
  };
}>
"
`;
