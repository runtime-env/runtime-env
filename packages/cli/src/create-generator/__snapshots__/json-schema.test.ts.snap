// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`generate js should be undefined if no corresponding environment variable presents (non-primitive) 1`] = `
"// Generated by '@runtime-env/cli'

globalThis.runtimeEnv = {
  "QUX": undefined,
}
"
`;

exports[`generate js should be undefined if no corresponding environment variable presents (primitive) 1`] = `
"// Generated by '@runtime-env/cli'

globalThis.runtimeEnv = {
  "QUX": undefined,
}
"
`;

exports[`generate js should escape 1`] = `
"// Generated by '@runtime-env/cli'

globalThis.runtimeEnv = {
  "FOO": "\\u003Cscript\\u003E",
  "BAR": {"BAZ":"\\u003Cscript\\u003E"},
}
"
`;

exports[`generate js should throw 1 1`] = `"schema is invalid: data/type must be "object""`;

exports[`generate js should throw 2 1`] = `"schema is invalid: data/properties must be object"`;

exports[`generate js should throw 3 1`] = `"env is invalid: [{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"FOO"},"message":"must have required property 'FOO'"}]"`;

exports[`generate js should throw 4 1`] = `
"env is invalid: [{"instancePath":"/FOO","schemaPath":"#/properties/FOO/type","keyword":"type","params":{"type":"number"},"message":"must be number"}]
env is invalid: [{"instancePath":"/BAR/BAZ","schemaPath":"#/properties/BAR/properties/BAZ/type","keyword":"type","params":{"type":"number"},"message":"must be number"}]"
`;

exports[`generate js should throw 5 1`] = `"schema is invalid: data/required must be array"`;

exports[`generate js should throw 6 1`] = `"schema is invalid: data/required/0 must be string"`;

exports[`generate js should works (envFile + userEnvironment) 1`] = `
"// Generated by '@runtime-env/cli'

globalThis.runtimeEnv = {
  "FOO": "override",
  "BAR": {"BAZ":"value"},
}
"
`;

exports[`generate js should works (envFile only) 1`] = `
"// Generated by '@runtime-env/cli'

globalThis.runtimeEnv = {
  "FOO": "escape\\u003C",
  "BAR": {"BAZ":"value"},
}
"
`;

exports[`generate js should works (multiple envFile) 1`] = `
"// Generated by '@runtime-env/cli'

globalThis.runtimeEnv = {
  "FOO": "foo",
  "BAR": {"BAZ":"baz"},
}
"
`;

exports[`generate js should works (userEnvironment only) 1`] = `
"// Generated by '@runtime-env/cli'

globalThis.runtimeEnv = {
  "FOO": "override",
  "BAR": undefined,
}
"
`;

exports[`generate ts should works 1`] = `
"// Generated by '@runtime-env/cli'

type Primitive = undefined | null | boolean | string | number;

type DeepReadonly<T> = T extends Primitive
  ? T
  : T extends Array<infer U>
    ? DeepReadonlyArray<U>
    : DeepReadonlyObject<T>;

type DeepReadonlyArray<T> = ReadonlyArray<DeepReadonly<T>>;

type DeepReadonlyObject<T> = {
  readonly [K in keyof T]: DeepReadonly<T[K]>;
};

declare global {
  var runtimeEnv: RuntimeEnv
}

export type RuntimeEnv = DeepReadonly<{
  FOO: string;
  BAR?: {
    BAZ?: string;
  };
}>
"
`;

exports[`interpolate should works (envFileOnly) 1`] = `
"<!DOCTYPE html>
<html>
  <body>
    <div>\\u003Cscript\\u003E</div>
  </body>
</html>"
`;

exports[`interpolate should works (nested) 1`] = `
"<!DOCTYPE html>
<html>
  <body>
    <div>\\u003Cscript\\u003E</div>
    <div>\\u003Cscript\\u003E</div>
    <div>\\u003Cscript\\u003E</div>
    <div></div>
    <div></div>
    <div></div>
    <div></div>
  </body>
</html>"
`;

exports[`interpolate should works (stringified number) 1`] = `
"<!DOCTYPE html>
<html>
  <body>
    <div>42</div>
    <div>1</div>
  </body>
</html>"
`;

exports[`interpolate should works (userEnvironment) 1`] = `
"<!DOCTYPE html>
<html>
  <body>
    <div>override</div>
  </body>
</html>"
`;
