import{_ as a,o as s,c as e,Q as n}from"./chunks/framework.1169fbc9.js";const E=JSON.parse('{"title":"Runtime Transform","description":"","frontmatter":{},"headers":[],"relativePath":"guide/getting-started/runtime-transform.md","filePath":"guide/getting-started/runtime-transform.md"}'),o={name:"guide/getting-started/runtime-transform.md"},t=n(`<h1 id="runtime-transform" tabindex="-1">Runtime Transform <a class="header-anchor" href="#runtime-transform" aria-label="Permalink to &quot;Runtime Transform&quot;">​</a></h1><p>Please read the <a href="/guide/getting-started/introduction.html#guide">guide</a> for how to use this tool.</p><h2 id="cli" tabindex="-1">CLI <a class="header-anchor" href="#cli" aria-label="Permalink to &quot;CLI&quot;">​</a></h2><p><a href="https://www.npmjs.com/package/@import-meta-env/cli" target="_blank" rel="noreferrer"><img src="https://img.shields.io/npm/v/@import-meta-env/cli.svg?color=blue" alt="NPM version"></a></p><h3 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">i</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@import-meta-env/cli</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@import-meta-env/cli</span></span></code></pre></div><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">import-meta-env</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.env.example</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">import-meta-env</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.env.example</span></span></code></pre></div><p>Related examples: <a href="https://github.com/import-meta-env/import-meta-env/blob/main/packages/examples/docker-starter-example" target="_blank" rel="noreferrer">docker</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>By default, import-meta-env will automatically replace all files in the <a href="https://github.com/import-meta-env/import-meta-env/blob/e4defac25c89ff1bfd71ec478713720bd82d85d4/packages/cli/src/shared.ts#L5-L16" target="_blank" rel="noreferrer">common bundle output directories</a></p><p>You can override this behavior by passing the <code>-p, --path &lt;path...&gt;</code> option.</p><p>For more information, see <a href="/api.html#import-meta-env-cli">API</a>.</p></div><h3 id="without-node-js" tabindex="-1">Without Node.js <a class="header-anchor" href="#without-node-js" aria-label="Permalink to &quot;Without Node.js&quot;">​</a></h3><p>Since your application may be deployed on a system that doesn&#39;t have Node.js installed, you can use <a href="https://github.com/vercel/pkg" target="_blank" rel="noreferrer">pkg</a> to package the <code>import-meta-env</code> script into a standalone binary.</p><p>For example, you may host your application on a <a href="https://hub.docker.com/_/nginx" target="_blank" rel="noreferrer">Alpine Linux nginx image</a>):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pkg</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./node_modules/@import-meta-env/cli/bin/import-meta-env.js</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">--target</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node18-alpine-x64</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">--output</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">import-meta-env-alpine</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pkg</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./node_modules/@import-meta-env/cli/bin/import-meta-env.js</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">--target</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node18-alpine-x64</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">--output</span><span style="color:#24292E;"> </span><span style="color:#032F62;">import-meta-env-alpine</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./import-meta-env-alpine</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.env.example</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./import-meta-env-alpine</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.env.example</span></span></code></pre></div>`,15),p=[t];function l(r,c,i,d,m,y){return s(),e("div",null,p)}const u=a(o,[["render",l]]);export{E as __pageData,u as default};
